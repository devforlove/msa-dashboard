buildscript {
	ext {
		set('springBootVersion', '3.1.2')
		set('lombokVersion', '1.18.24')
		set('springCloudVersion', '2022.0.3')
		set('commonLangVersion', '3.12.0')
	}


	repositories {
		mavenCentral()
		maven { url 'https://repo.spring.io/milestone' }
		maven { url 'https://repo.spring.io/snapshot' }
		maven { url 'https://plugins.gradle.org/m2/' }
	}

	dependencies {
		classpath 'io.spring.gradle:dependency-management-plugin:1.0.13.RELEASE'
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
	}
}

allprojects {
	group 'com.wook.top'
	version '1.0'
}

subprojects {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java-library'

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	tasks.named('test') {
		useJUnitPlatform()
	}

	repositories {
		mavenCentral()
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'

		implementation 'org.springframework.boot:spring-boot-starter-aop'

		implementation 'org.springframework.boot:spring-boot-starter-test'

//		testImplementation('org.springframework.boot:spring-boot-starter-test') {
//			exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
//		}
	}
}

project(':dashboard-common') {
	dependencies {

	}
}

project(':dashboard-member-service') {
	dependencies {
		implementation project(path: ':dashboard-common', configuration: 'default')
	}
}

project(':dashboard-front-service') {
	dependencies {
		implementation project(path: ':dashboard-common', configuration: 'default')
	}
}
