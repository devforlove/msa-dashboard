name: "[BACKEND] Build"
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "`x.y.z-backend.NN` 형태로 버전을 입력해주세요. (ex. 0.1.0-backend.05)"
        required: true
        default: 0.0.1-backend.00
      service:
        type: choice
        description: 배포할 서비스를 선택해주세요
        required: true
        default: ''
        options:
          - dashboard-member-service
          - dashboard-post-command-service
          - dashboard-post-query-service
env:
  TAG: ${{ github.event.inputs.tag }}
  SERVICE: ${{ github.event.inputs.service }}
  SLACK_WEBHOOK_URL: ${{secrets.SLACK_WEBHOOK_URL}}
  BACKEND_ECR_REPOSITORY: ${{ secrets.BACKEND_ECR_REPOSITORY }}
  BUILD_PATH: "~/backend-build-tmp"

permissions:
  id-token: write
  contents: write

jobs:
  condition_check:
    runs-on: ubuntu-latest
    steps:
      - name: check tag format
        run: |
          if [[ !(${{ env.TAG }} =~ ^(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\-backend\.[0-9]{2}$) ]];
          then
            echo "You entered an incorrect tag format."
            exit 1
          fi
  tagging:
    needs: condition_check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Create Tag
        run: |
          git tag ${{ env.TAG }}
          git push origin ${{ env.TAG }}
  build:
    needs: tagging
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: Build Java Sample Code
        run: |
          mkdir -p $BUILD_PATH
          ./gradlew :${{ env.SERVICE }}:build -x test 
          cp -rf ${{ env.SERVICE }}/build/libs/* $BUILD_PATH/
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.ASSUME_ROLE_ARN }}
          aws-region: ap-northeast-2
          role-session-name: GithubActionSession
      - id: build-image
        name: Build and Tag Image
        env:
          BACKEND_ECR_REPOSITORY: ${{ env.BACKEND_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.TAG }}
        run: |
          docker build -t $BACKEND_ECR_REPOSITORY:$IMAGE_TAG ${{ env.SERVICE }}
      - id: login-ecr
        name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
      - id: push-image-to-aws-ecr
        name: Push image to Amazon ECR
        env:
          BACKEND_ECR_REPOSITORY: ${{ env.BACKEND_ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.TAG }}
        run: |
          docker push $BACKEND_ECR_REPOSITORY:$IMAGE_TAG
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1
      - name: Checkout kustomize repository
        uses: actions/checkout@v3
      - name: Update Kubernetes resources
        run: |
          cd kubernetes/{{ env.SERVICE }}/gitops
          kustomize edit set image {{ env.SERVICE}}-image=${{ env.BACKEND_ECR_REPOSITORY }}:${{ env.TAG }}
      - name: Commit & Push Image
        uses: actions-js/push@master
        with:
          message: '[DEPLOY] Update Image ${{ env.BACKEND_ECR_REPOSITORY }}:${{ env.TAG }}'
          branch: master
          github_token: ${{ secrets.GITHUB_TOKEN }}